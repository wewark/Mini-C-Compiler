SINGLE_COMMENT \/\/.+
MULTI_COMMENT /\*[\s\S]*?\*/
AUTO \bauto\b
NEW \bnew\b
TRUE \btrue\b
FALSE \bfalse\b
BREAK \bbreak\b
BOOL \bbool\b
CASE \bcase\b
CHAR \bchar\b
CONST \bconst\b
CONTINUE \bcontinue\b
DEFAULT \bdefault\b
DO \bdo\b
DOUBLE \bdouble\b
ELSE \belse\b
ENUM \benum\b
EXTERN \bextern\b
FLOAT \bfloat\b
FOR \bfor\b
GOTO \bgoto\b
IF \bif\b
INT \bint\b
STRING \bstring\b
LONG \blong\b
REGISTER \bregister\b
RETURN \breturn\b
SHORT \bshort\b
SIGNED \bsigned\b
SIZEOF \bsizeof\b
STATIC \bstatic\b
STRUCT \bstruct\b
SWITCH \bswitch\b
TYPEDEF \btypedef\b
UNION \bunion\b
UNSIGNED \bunsigned\b
VOID \bvoid\b
VOLATILE \bvolatile\b
WHILE \bwhile\b
FLOAT_LITERAL [0-9]+\.[0-9]+
INTEGRAL_LITERAL [0-9]+
CHAR_LITERAL \'.\'
STRING_LITERAL \".*\"
LEFT_CURLY_B \{
RIGHT_CURLY_B \}
LEFT_SQUARE_B \[
RIGHT_SQUARE_B \]
LEFT_ROUND_B \(
RIGHT_ROUND_B \)
COMMA ,
SEMICOLON ;
DOT \.
NOT !
PREPROCESSOR #
BACKWARD_SLASH \\
MINUS -
PLUS \+
ASTERICK \*
DIVIDE \/
MOD %
LEFT_SHIFT >>
GREAT_EQ >=
GREATERTHAN >
RIGHT_SHIFT <<
LESS_EQ <=
LESSTHAN <
EQUAL ==
NOT_EQUAL !=
ASSIGN_OPERATOR =
AND &&
BITWISE_AND &
OR \|\|
BITWISE_OR \|
BITWISE_XOR \^
BITWISE_NOT ~
ID [a-zA-Z_][a-zA-Z_0-9]*
EOF \b0\b