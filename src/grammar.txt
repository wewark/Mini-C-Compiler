program -> decl_list
---
decl_list -> decl decl_list
           | decl
---
decl -> var_decl
      | fun_decl
---
var_decl -> type_spec ID SEMICOLON
          | type_spec ID LEFT_SQUARE_B RIGHT_SQUARE_B SEMICOLON
          | type_spec ID ASSIGN_OPERATOR expr SEMICOLON
---
type_spec -> VOID
           | BOOL
           | INT
           | FLOAT
           | CHAR
---
fun_decl -> type_spec ID LEFT_ROUND_B params RIGHT_ROUND_B compound_stmt
---
params -> param_list
        | VOID
        | NULL
---
param_list -> param COMMA param_list
            | param
---
param -> type_spec ID
       | type_spec ID LEFT_SQUARE_B RIGHT_SQUARE_B
---
stmt_list -> stmt stmt_list
           | NULL
---
stmt -> expr_stmt
      | compound_stmt
      | if_stmt
      | while_stmt
      | return_stmt
      | break_stmt
---
expr_stmt -> expr SEMICOLON
           | SEMICOLON
---
while_stmt -> WHILE LEFT_ROUND_B expr RIGHT_ROUND_B stmt
---
compound_stmt -> LEFT_CURLY_B local_decls stmt_list RIGHT_CURLY_B
---
local_decls -> local_decl local_decls
             | NULL
---
local_decl -> type_spec ID SEMICOLON
            | type_spec ID LEFT_SQUARE_B RIGHT_SQUARE_B SEMICOLON
            | type_spec ID ASSIGN_OPERATOR expr SEMICOLON
---
if_stmt -> IF LEFT_ROUND_B expr RIGHT_ROUND_B stmt
         | IF LEFT_ROUND_B expr RIGHT_ROUND_B stmt ELSE stmt
---
return_stmt -> RETURN SEMICOLON
             | RETURN expr SEMICOLON
---
break_stmt -> BREAK SEMICOLON
---
arg_list -> expr COMMA arg_list
          | expr
---
args -> arg_list
      | NULL
---
expr -> ID ASSIGN_OPERATOR expr6
      | ID LEFT_SQUARE_B expr6 RIGHT_SQUARE_B ASSIGN_OPERATOR expr6
      | expr6
---
expr6 -> expr5 BITWISE_OR expr6
       | expr5 OR expr6
       | expr5
---
expr5 -> expr4 BITWISE_AND expr5
       | expr4 AND expr5
       | expr4
---
expr4 -> expr3 EQUAL expr3
      | expr3 NOT_EQUAL expr3
      | expr3 LESS_EQ expr3
      | expr3 LESSTHAN expr3
      | expr3 GREAT_EQ expr3
      | expr3 GREATERTHAN expr3
      | expr3
---
expr3 -> expr2 PLUS expr3
      | expr2 MINUS expr3
      | expr2
---
expr2 -> expr1 ASTERICK expr2
      | expr1 DIVIDE expr2
      | expr1 MOD expr2
      | expr1
---
expr1 -> NOT expr1
      | MINUS expr1
      | PLUS expr1
      | LEFT_ROUND_B expr RIGHT_ROUND_B
      | ID LEFT_SQUARE_B expr RIGHT_SQUARE_B
      | ID LEFT_ROUND_B args RIGHT_ROUND_B
      | ID DOT size
      | NEW type_spec LEFT_SQUARE_B expr RIGHT_SQUARE_B
      | ID
      | TRUE
      | FALSE
      | INTEGRAL_LITERAL
      | FLOAT_LITERAL
      | CHAR_LITERAL
---